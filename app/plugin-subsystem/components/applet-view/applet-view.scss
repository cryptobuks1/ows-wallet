#applet-view {
  background-color: transparent;
  width: 100%;
  min-height: 0 !important;
  height: 100% !important;
  top: 0;
  left: 0;
  right: 0;
  bottom: calc(constant(safe-area-inset-bottom));
  bottom: calc(env(safe-area-inset-bottom));

  /**
   * Applet open/close animation.
   * See https://github.com/kevincobain2000/ionic-animated-modal
   */

  -webkit-animation-duration: 300ms;
  animation-duration: 300ms;

  &.animated.modal.bounceIn.ng-leave {
    -webkit-animation-name:bounceOut;
    animation-name:bounceOut;
  }

  &.animated.modal.bounceInDown.ng-leave {
    -webkit-animation-name:bounceOutUp;
    animation-name:bounceOutUp;
  }

  &.animated.modal.bounceInLeft.ng-leave {
    -webkit-animation-name:bounceOutLeft;
    animation-name:bounceOutLeft;
  }

  &.animated.modal.bounceInRight.ng-leave {
    -webkit-animation-name:bounceOutRight;
    animation-name:bounceOutRight;
  }

  &.animated.modal.bounceInUp.ng-leave {
    -webkit-animation-name:bounceOutDown;
    animation-name:bounceOutDown;
  }

  &.animated.modal.bounceOut.ng-leave {
    -webkit-animation-name:bounceOut;
    animation-name:bounceOut;
  }

  &.animated.modal.fadeIn.ng-leave {
    -webkit-animation-name:fadeOut;
    animation-name:fadeOut;
  }

  &.animated.modal.fadeInDown.ng-leave {
    -webkit-animation-name:fadeOutDown;
    animation-name:fadeOutDown;
  }

  &.animated.modal.fadeInDownBig.ng-leave {
    -webkit-animation-name:fadeOutDownBig;
    animation-name:fadeOutDownBig;
  }

  &.animated.modal.fadeInLeft.ng-leave {
    -webkit-animation-name:fadeOutLeft;
    animation-name:fadeOutLeft;
  }

  &.animated.modal.fadeInLeftBig.ng-leave {
    -webkit-animation-name:fadeOutLeftBig;
    animation-name:fadeOutLeftBig;
  }

  &.animated.modal.fadeInRight.ng-leave {
    -webkit-animation-name:fadeOutRight;
    animation-name:fadeOutRight;
  }

  &.animated.modal.fadeInRightBig.ng-leave {
    -webkit-animation-name:fadeOutRightBig;
    animation-name:fadeOutRightBig;
  }

  &.animated.modal.fadeInUp.ng-leave {
    -webkit-animation-name:fadeOutUp;
    animation-name:fadeOutUp;
  }

  &.animated.modal.fadeInUpBig.ng-leave {
    -webkit-animation-name:fadeOutUpBig;
    animation-name:fadeOutUpBig;
  }

  &.animated.modal.flipInX.ng-leave {
    -webkit-animation-name:flipOutX;
    animation-name:flipOutX;
  }

  &.animated.modal.flipInY.ng-leave {
    -webkit-animation-name:flipOutY;
    animation-name:flipOutY;
  }

  &.animated.modal.lightSpeedIn.ng-leave {
    -webkit-animation-name:lightSpeedOut;
    animation-name:lightSpeedOut;
  }

  &.animated.modal.rotateIn.ng-leave {
    -webkit-animation-name:rotateOut;
    animation-name:rotateOut;
  }

  &.animated.modal.rotateInDownLeft.ng-leave {
    -webkit-animation-name:rotateOutDownLeft;
    animation-name:rotateOutDownLeft;
  }

  &.animated.modal.rotateInDownRight.ng-leave {
    -webkit-animation-name:rotateOutDownRight;
    animation-name:rotateOutDownRight;
  }

  &.animated.modal.rotateInUpLeft.ng-leave {
    -webkit-animation-name:rotateOutUpLeft;
    animation-name:rotateOutUpLeft;
  }

  &.animated.modal.rotateInUpRight.ng-leave {
    -webkit-animation-name:rotateOutUpRight;
    animation-name:rotateOutUpRight;
  }

  &.animated.modal.slideInUp.ng-leave {
    -webkit-animation-name:slideOutDown;
    animation-name:slideOutDown;
  }

  &.animated.modal.slideInDown.ng-leave {
    -webkit-animation-name:slideOutUp;
    animation-name:slideOutUp;
  }

  &.animated.modal.slideInLeft.ng-leave {
    -webkit-animation-name:slideOutLeft;
    animation-name:slideOutLeft;
  }

  &.animated.modal.slideInRight.ng-leave {
    -webkit-animation-name:slideOutRight;
    animation-name:slideOutRight;
  }

  &.animated.modal.zoomIn.ng-leave {
    -webkit-animation-name:zoomOut;
    animation-name:zoomOut;
  }

  &.animated.modal.zoomInDown.ng-leave {
    -webkit-animation-name:zoomOutDown;
    animation-name:zoomOutDown;
  }

  &.animated.modal.zoomInLeft.ng-leave {
    -webkit-animation-name:zoomOutLeft;
    animation-name:zoomOutLeft;
  }

  &.animated.modal.zoomInRight.ng-leave {
    -webkit-animation-name:zoomOutRight;
    animation-name:zoomOutRight;
  }

  &.animated.modal.zoomInUp.ng-leave {
    -webkit-animation-name:zoomOutUp;
    animation-name:zoomOutUp;
  }

  &.animated.modal.rollIn.ng-leave {
    -webkit-animation-name:rollOut;
    animation-name:rollOut;
  }

  /**
   * Floating menu button with drag and drop placement.
   */

  .applet-menu {
    margin: 0;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
  }

  .applet-menu[data-mfb-state="closed"] .mfb-component__button--main {
    background-color: $v-mfb-main-color-closed;
    box-shadow: $v-mfb-button-box-shadow-closed;
    color: $v-mfb-button-text-color-closed;

    animation-name: fadeMfb;
    animation-duration: 2s;
    animation-timing-function: ease-in-out;
    animation-iteration-count: 1;
    animation-play-state: running;
  }

  @keyframes fadeMfb {
    0% {
      background-color: $v-mfb-main-color;
      color: $v-mfb-button-text-color;
    }
    80.0% {
      background-color: $v-mfb-main-color;
      color: $v-mfb-button-text-color;
    }
    100.0% {
      background-color: $v-mfb-main-color-closed;
      color: $v-mfb-button-text-color-closed;
    }
  }

  // Define the start (default) position of applet menu.
  .applet-menu-drag-item {
    position: absolute;
    bottom: 25px;
    right: 25px;
    width: $v-mfb-size;
    height: $v-mfb-size;
    // background: $v-white-color; // debug only - visible drag item

    &.drag-active {
      .applet-menu[data-mfb-state="closed"] .mfb-component__button--main {
        background-color: $main-color;
        box-shadow: $button-box-shadow;
        color: $button-text-color;
      }
    }
  }

  // Allow drag on the whole view.
  .applet-menu-drag-container {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }

  // The menu is contrained to this drop spot.
  .applet-menu-drop-spot {
    width: calc(100% - #{$v-mfb-size});
    height: calc(100% - #{$v-mfb-size});
    margin: auto;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }

  /* debug only - visible drop spot.
  .drop-content {
    border: 2px dashed $v-black-color;
    width: 100%;
    height: 100%;
    margin: auto;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }

  .dragging .drop-content {
    border: 2px dashed $v-white-color;
  }

  .drop-hovering .drop-content {
    border-color: $v-success-color;
  }
  */

	.applet-frame {
	  position: absolute;
	  top: 0;
	  width: 100%;
	  height: 100%;
	  height: calc(100% - constant(safe-area-inset-bottom));
	  height: calc(100% - env(safe-area-inset-bottom));
	}
}

@import "settings/settings";
