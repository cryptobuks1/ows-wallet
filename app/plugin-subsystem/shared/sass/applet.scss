/**
 * App main view
 */

// Background needs to be black as backdrop to the zoom effect.
body {
  background: $v-black-color;

  > .view-container {
    transition: $v-applet-transition;

    &.zoom {
      transform: scale(0.9);
      opacity: 0.5;
    }
  }
}

/**
 * Applet frame and view
 */

.applet-frame {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  height: calc(100% - constant(safe-area-inset-bottom));
  height: calc(100% - env(safe-area-inset-bottom));
}

.applet-view { 
  background-color: transparent;
  width: 100%;
  min-height: 0 !important;
  height: 100% !important;
  top: 0;
  left: 0;
  right: 0;
  bottom: calc(constant(safe-area-inset-bottom));
  bottom: calc(env(safe-area-inset-bottom));

  /**
   * Applet open/close animation.
   */

  &.ng-enter {
   -webkit-animation: zoomIn $v-applet-transition !important;
   animation: zoomIn $v-applet-transition !important;
  }

  &.ng-leave {
   -webkit-animation: zoomOut $v-applet-transition !important;
   animation: zoomOut $v-applet-transition !important;
  }

  /**
   * Floating menu button with drag and drop placement.
   */

  .applet-menu {
    margin: 0;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
  }

  // Define the start (default) position of applet menu.
  .applet-menu-drag-item {
    position: absolute;
    bottom: 25px;
    right: 25px;
    width: $v-mfb-size;
    height: $v-mfb-size;
    // background: $v-white-color; // debug only - visible drag item

    &.drag-active {
      .applet-menu[data-mfb-state="closed"] .mfb-component__button--main {
        background-color: $main-color;
        box-shadow: $button-box-shadow;
        color: $button-text-color;
      }
    }
  }

  // Allow drag on the whole view.
  .applet-menu-drag-container {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }

  // The menu is contrained to this drop spot.
  .applet-menu-drop-spot {
    width: calc(100% - #{$v-mfb-size});
    height: calc(100% - #{$v-mfb-size});
    margin: auto;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }

  /* debug only - visible drop spot.
  .drop-content {
    border: 2px dashed $v-black-color;
    width: 100%;
    height: 100%;
    margin: auto;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }

  .dragging .drop-content {
    border: 2px dashed $v-white-color;
  }

  .drop-hovering .drop-content {
    border-color: $v-success-color;
  }
  */
}

/* these are view specific styles to move to app component scss */

/*
 * Used in preferences for listing applets.
 */

.applet-list-item .item {
  font-size: 14px;
  border-top: none;
  margin-bottom: 0;
}

.button-applet-header {
  font-size: 14px !important;
  font-weight: normal !important;
  text-transform: none !important;
  background-color: transparent !important;
}

.button-applet-header .icon:before,
.button-applet-header.icon:before {
  font-size: 20px !important;
}


/* Start of Ionic modifications */

/*
 * Allow the applet-content div to fill the modal space.
 * See https://forum.ionicframework.com/t/fill-content-container/605/11
 */
.scroll-content > .scroll {
  height: 100%;
}

/*
 * Fix modal backdrop for smaller devices
 * See http://loring-dodge.azurewebsites.net/ionic-nifty-modal/
 */
@media (max-width: 679px) {
  .active .modal-backdrop-bg {
    opacity: .5;
  }
  .modal-backdrop-bg {
    -webkit-transition: opacity 300ms ease-in-out;
    transition: opacity 300ms ease-in-out;
    background-color: #000;
    opacity: 0;
  }
}


/*
 * Redefine needed icon-* to defeat app definition which overrides Ionic.
 */

.button.applet-icon-left:before {
  float: left;
  padding-right: .2em !important;
  padding-left: 0 !important;
}

.button.applet-icon-right:before {
  float: right;
  padding-left: .2em !important;
  padding-right: 0 !important;
}

.button.applet-icon-left:before, .button.applet-icon-right:before {
  display: inline-block;
  padding: 0 0 1px 0;
  vertical-align: inherit;
  font-size: 24px;
  line-height: 33px;
  pointer-events: none;
}

/*
 * Don't dim when the button is clicked.
 */
.button-clear.activated,
.button-clear.active {
  opacity: 1.0 !important;
}

/* End of Ionic modifications */
